"""Init

Revision ID: 8d0004c41d47
Revises: 
Create Date: 2025-06-24 09:44:48.942743

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8d0004c41d47'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cars')
    op.add_column('profiles', sa.Column('date_of_birth', sa.DateTime(), nullable=True))
    op.add_column('profiles', sa.Column('email', sa.String(), nullable=False))
    op.add_column('profiles', sa.Column('mobile_phone', sa.String(), nullable=False))
    op.add_column('profiles', sa.Column('avatar', sa.String(), nullable=False))
    op.alter_column('profiles', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('profiles', 'user_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.drop_constraint('profiles_user_id_fkey', 'profiles', type_='foreignkey')
    op.create_foreign_key(None, 'profiles', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('users', sa.Column('username', sa.String(), nullable=False))
    op.add_column('users', sa.Column('password', sa.String(), nullable=False))
    op.add_column('users', sa.Column('create_date', sa.DateTime(), nullable=False))
    op.add_column('users', sa.Column('is_active', sa.Boolean(), server_default='false', nullable=False))
    op.add_column('users', sa.Column('is_user', sa.Boolean(), server_default=sa.text('true'), nullable=False))
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), server_default=sa.text('false'), nullable=False))
    op.add_column('users', sa.Column('is_superadmin', sa.Boolean(), server_default=sa.text('false'), nullable=False))
    op.alter_column('users', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('users_id_seq'::regclass)"))
    op.create_unique_constraint(None, 'users', ['password'])
    op.drop_column('users', 'name')
    op.drop_column('users', 'age')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('users_id_seq'::regclass)"))
    op.drop_column('users', 'is_superadmin')
    op.drop_column('users', 'is_admin')
    op.drop_column('users', 'is_user')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'create_date')
    op.drop_column('users', 'password')
    op.drop_column('users', 'username')
    op.drop_constraint(None, 'profiles', type_='foreignkey')
    op.create_foreign_key('profiles_user_id_fkey', 'profiles', 'users', ['user_id'], ['id'])
    op.alter_column('profiles', 'user_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('profiles', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('profiles', 'avatar')
    op.drop_column('profiles', 'mobile_phone')
    op.drop_column('profiles', 'email')
    op.drop_column('profiles', 'date_of_birth')
    op.create_table('cars',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('mark', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='cars_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='cars_pkey')
    )
    # ### end Alembic commands ###
